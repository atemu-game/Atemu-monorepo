[
  {
    "name": "FuelImple",
    "type": "impl",
    "interface_name": "atemu::interfaces::fuel::IFuel"
  },
  {
    "name": "core::integer::u256",
    "type": "struct",
    "members": [
      {
        "name": "low",
        "type": "core::integer::u128"
      },
      {
        "name": "high",
        "type": "core::integer::u128"
      }
    ]
  },
  {
    "name": "atemu::interfaces::fuel::IFuel",
    "type": "interface",
    "items": [
      {
        "name": "manuallyCreatePool",
        "type": "function",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "joiningPool",
        "type": "function",
        "inputs": [
          {
            "name": "poolId",
            "type": "core::integer::u256"
          },
          {
            "name": "amountPoint",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "cancelPool",
        "type": "function",
        "inputs": [
          {
            "name": "poolId",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "updateDuration",
        "type": "function",
        "inputs": [
          {
            "name": "duration",
            "type": "core::integer::u64"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "updatePoolPointAddress",
        "type": "function",
        "inputs": [
          {
            "name": "pointAddress",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "updateCardAddress",
        "type": "function",
        "inputs": [
          {
            "name": "cardAddress",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "updateDrawer",
        "type": "function",
        "inputs": [
          {
            "name": "drawer",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "claimReward",
        "type": "function",
        "inputs": [
          {
            "name": "poolId",
            "type": "core::integer::u256"
          },
          {
            "name": "cardId",
            "type": "core::integer::u256"
          },
          {
            "name": "proof",
            "type": "core::array::Array::<core::felt252>"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "name": "getCurrentPoolId",
    "type": "function",
    "inputs": [],
    "outputs": [
      {
        "type": "core::integer::u256"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "atemu::fuel::fuel::Fuel::PoolDetail",
    "type": "struct",
    "members": [
      {
        "name": "id",
        "type": "core::integer::u256"
      },
      {
        "name": "startAt",
        "type": "core::integer::u64"
      },
      {
        "name": "endAt",
        "type": "core::integer::u64"
      },
      {
        "name": "totalStaked",
        "type": "core::integer::u256"
      },
      {
        "name": "status",
        "type": "core::integer::u8"
      },
      {
        "name": "winner",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "name": "getPoolDetail",
    "type": "function",
    "inputs": [
      {
        "name": "poolId",
        "type": "core::integer::u256"
      }
    ],
    "outputs": [
      {
        "type": "atemu::fuel::fuel::Fuel::PoolDetail"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "getDuration",
    "type": "function",
    "inputs": [],
    "outputs": [
      {
        "type": "core::integer::u64"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "getArrayParticipants",
    "type": "function",
    "inputs": [
      {
        "name": "poolId",
        "type": "core::integer::u256"
      }
    ],
    "outputs": [
      {
        "type": "core::array::Array::<core::starknet::contract_address::ContractAddress>"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "getPoolPointAddress",
    "type": "function",
    "inputs": [],
    "outputs": [
      {
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "getCardAddress",
    "type": "function",
    "inputs": [],
    "outputs": [
      {
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "getStakedPoint",
    "type": "function",
    "inputs": [
      {
        "name": "player",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "poolId",
        "type": "core::integer::u256"
      }
    ],
    "outputs": [
      {
        "type": "core::integer::u256"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "getDrawer",
    "type": "function",
    "inputs": [],
    "outputs": [
      {
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ],
    "state_mutability": "view"
  },
  {
    "name": "pause",
    "type": "function",
    "inputs": [],
    "outputs": [],
    "state_mutability": "external"
  },
  {
    "name": "unpause",
    "type": "function",
    "inputs": [],
    "outputs": [],
    "state_mutability": "external"
  },
  {
    "name": "OwnableImpl",
    "type": "impl",
    "interface_name": "openzeppelin::access::ownable::interface::IOwnable"
  },
  {
    "name": "openzeppelin::access::ownable::interface::IOwnable",
    "type": "interface",
    "items": [
      {
        "name": "owner",
        "type": "function",
        "inputs": [],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "name": "transfer_ownership",
        "type": "function",
        "inputs": [
          {
            "name": "new_owner",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "renounce_ownership",
        "type": "function",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "name": "PausableImpl",
    "type": "impl",
    "interface_name": "openzeppelin::security::interface::IPausable"
  },
  {
    "name": "core::bool",
    "type": "enum",
    "variants": [
      {
        "name": "False",
        "type": "()"
      },
      {
        "name": "True",
        "type": "()"
      }
    ]
  },
  {
    "name": "openzeppelin::security::interface::IPausable",
    "type": "interface",
    "items": [
      {
        "name": "is_paused",
        "type": "function",
        "inputs": [],
        "outputs": [
          {
            "type": "core::bool"
          }
        ],
        "state_mutability": "view"
      }
    ]
  },
  {
    "name": "constructor",
    "type": "constructor",
    "inputs": [
      {
        "name": "owner",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "duration",
        "type": "core::integer::u64"
      },
      {
        "name": "pointAddress",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "cardAddress",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "drawer",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "atemu::fuel::fuel::Fuel::CreatePool",
    "type": "event",
    "members": [
      {
        "kind": "key",
        "name": "id",
        "type": "core::integer::u256"
      },
      {
        "kind": "data",
        "name": "startAt",
        "type": "core::integer::u64"
      },
      {
        "kind": "data",
        "name": "endAt",
        "type": "core::integer::u64"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "atemu::fuel::fuel::Fuel::JoiningPool",
    "type": "event",
    "members": [
      {
        "kind": "key",
        "name": "player",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "poolId",
        "type": "core::integer::u256"
      },
      {
        "kind": "data",
        "name": "stakedAmount",
        "type": "core::integer::u256"
      },
      {
        "kind": "data",
        "name": "joinedAt",
        "type": "core::integer::u64"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "atemu::fuel::fuel::Fuel::CancelPool",
    "type": "event",
    "members": [
      {
        "kind": "key",
        "name": "id",
        "type": "core::integer::u256"
      },
      {
        "kind": "data",
        "name": "canceledAt",
        "type": "core::integer::u64"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "atemu::fuel::fuel::Fuel::ClaimReward",
    "type": "event",
    "members": [
      {
        "kind": "key",
        "name": "poolId",
        "type": "core::integer::u256"
      },
      {
        "kind": "data",
        "name": "winner",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "totalPoints",
        "type": "core::integer::u256"
      },
      {
        "kind": "data",
        "name": "cardId",
        "type": "core::integer::u256"
      },
      {
        "kind": "data",
        "name": "timestamp",
        "type": "core::integer::u64"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
    "type": "event",
    "members": [
      {
        "kind": "key",
        "name": "previous_owner",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "key",
        "name": "new_owner",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
    "type": "event",
    "members": [
      {
        "kind": "key",
        "name": "previous_owner",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "key",
        "name": "new_owner",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "kind": "enum",
    "name": "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
    "type": "event",
    "variants": [
      {
        "kind": "nested",
        "name": "OwnershipTransferred",
        "type": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred"
      },
      {
        "kind": "nested",
        "name": "OwnershipTransferStarted",
        "type": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted"
      }
    ]
  },
  {
    "kind": "enum",
    "name": "openzeppelin::security::reentrancyguard::ReentrancyGuardComponent::Event",
    "type": "event",
    "variants": []
  },
  {
    "kind": "struct",
    "name": "openzeppelin::security::pausable::PausableComponent::Paused",
    "type": "event",
    "members": [
      {
        "kind": "data",
        "name": "account",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "openzeppelin::security::pausable::PausableComponent::Unpaused",
    "type": "event",
    "members": [
      {
        "kind": "data",
        "name": "account",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "kind": "enum",
    "name": "openzeppelin::security::pausable::PausableComponent::Event",
    "type": "event",
    "variants": [
      {
        "kind": "nested",
        "name": "Paused",
        "type": "openzeppelin::security::pausable::PausableComponent::Paused"
      },
      {
        "kind": "nested",
        "name": "Unpaused",
        "type": "openzeppelin::security::pausable::PausableComponent::Unpaused"
      }
    ]
  },
  {
    "kind": "enum",
    "name": "atemu::fuel::fuel::Fuel::Event",
    "type": "event",
    "variants": [
      {
        "kind": "nested",
        "name": "CreatePool",
        "type": "atemu::fuel::fuel::Fuel::CreatePool"
      },
      {
        "kind": "nested",
        "name": "JoiningPool",
        "type": "atemu::fuel::fuel::Fuel::JoiningPool"
      },
      {
        "kind": "nested",
        "name": "CancelPool",
        "type": "atemu::fuel::fuel::Fuel::CancelPool"
      },
      {
        "kind": "nested",
        "name": "ClaimReward",
        "type": "atemu::fuel::fuel::Fuel::ClaimReward"
      },
      {
        "kind": "flat",
        "name": "ownableEvent",
        "type": "openzeppelin::access::ownable::ownable::OwnableComponent::Event"
      },
      {
        "kind": "flat",
        "name": "reentrancyEvent",
        "type": "openzeppelin::security::reentrancyguard::ReentrancyGuardComponent::Event"
      },
      {
        "kind": "flat",
        "name": "pausableEvent",
        "type": "openzeppelin::security::pausable::PausableComponent::Event"
      }
    ]
  }
]